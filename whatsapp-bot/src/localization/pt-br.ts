export const messages = {
  // Welcome and help messages
  welcome: `üëã Ol√°! Bem-vindo ao Rastreador de Despesas!

Sou seu assistente para gerenciar suas finan√ßas. Aqui est√° o que posso fazer:

üí∞ *Despesas e Receitas*
‚Ä¢ "Gastei R$50 em comida"
‚Ä¢ "Recebi R$2000 de sal√°rio"
‚Ä¢ "Adicionar despesa de 30 reais em transporte ontem"
‚Ä¢ "Mostrar minhas despesas"

üìä *Or√ßamentos*
‚Ä¢ "Definir or√ßamento de comida em R$500"
‚Ä¢ "Mostrar meus or√ßamentos"
‚Ä¢ "Status do or√ßamento"

üîÑ *Despesas Recorrentes*
‚Ä¢ "Adicionar aluguel mensal de R$1200 no dia 1"
‚Ä¢ "Mostrar pagamentos recorrentes"

üìà *Relat√≥rios*
‚Ä¢ "Relat√≥rio deste m√™s"
‚Ä¢ "Resumo de despesas"

üìÅ *Categorias*
‚Ä¢ "Listar categorias"
‚Ä¢ "Adicionar categoria Academia"

üîê *Autentica√ß√£o*
‚Ä¢ "Login: meuemail@example.com senha123"
‚Ä¢ "Sair"

Voc√™ tamb√©m pode me enviar fotos de SMS banc√°rios ou extratos!`,

  // Authentication messages
  loginPrompt: 'üîê Para come√ßar, fa√ßa login com:\n"Login: seu-email@example.com sua-senha"',
  loginSuccess: '‚úÖ Login realizado com sucesso! Agora voc√™ pode gerenciar suas despesas.',
  loginError: '‚ùå Erro ao fazer login. Verifique suas credenciais e tente novamente.',
  logoutSuccess: 'üëã Voc√™ foi desconectado com sucesso!',
  notAuthenticated: 'üîí Voc√™ precisa fazer login primeiro. Use:\n"Login: seu-email@example.com sua-senha"',
  sessionExpired: '‚è∞ Sua sess√£o expirou. Por favor, fa√ßa login novamente.',

  // Expense messages
  expenseAdded: (amount: number, category: string, date: string) => 
    `‚úÖ Despesa adicionada!\nüíµ Valor: R$ ${amount.toFixed(2)}\nüìÅ Categoria: ${category}\nüìÖ Data: ${date}`,
  incomeAdded: (amount: number, category: string, date: string) =>
    `‚úÖ Receita adicionada!\nüí∞ Valor: R$ ${amount.toFixed(2)}\nüìÅ Categoria: ${category}\nüìÖ Data: ${date}`,
  expenseError: '‚ùå N√£o consegui adicionar a despesa. Tente novamente.',
  invalidAmount: '‚ùå Valor inv√°lido. Por favor, use um n√∫mero v√°lido (ex: R$50 ou 50 reais).',

  // Budget messages
  budgetSet: (category: string, amount: number, month: string) =>
    `‚úÖ Or√ßamento definido!\nüìÅ Categoria: ${category}\nüí∞ Valor: R$ ${amount.toFixed(2)}\nüìÖ Per√≠odo: ${month}`,
  budgetError: '‚ùå Erro ao definir or√ßamento. Tente novamente.',
  noBudgets: 'üìä Voc√™ ainda n√£o tem or√ßamentos definidos.',

  // Recurring messages
  recurringAdded: (amount: number, category: string, day: number) =>
    `‚úÖ Despesa recorrente adicionada!\nüíµ Valor: R$ ${amount.toFixed(2)}\nüìÅ Categoria: ${category}\nüìÖ Dia do m√™s: ${day}`,
  recurringError: '‚ùå Erro ao adicionar despesa recorrente.',
  noRecurring: 'üîÑ Voc√™ n√£o tem despesas recorrentes cadastradas.',

  // Report messages
  reportHeader: (month: string, year: number) => 
    `üìà *Relat√≥rio - ${month}/${year}*\n${'='.repeat(30)}`,
  reportSummary: (income: number, expenses: number, balance: number) =>
    `üí∞ Receitas: R$ ${income.toFixed(2)}\nüí∏ Despesas: R$ ${expenses.toFixed(2)}\nüìä Saldo: R$ ${balance.toFixed(2)}`,
  noTransactions: 'üì≠ Nenhuma transa√ß√£o encontrada para este per√≠odo.',

  // Category messages
  categoryList: 'üìÅ *Categorias Dispon√≠veis*:\n',
  categoryAdded: (name: string) => `‚úÖ Categoria "${name}" adicionada com sucesso!`,
  categoryError: '‚ùå Erro ao adicionar categoria.',

  // OCR messages
  ocrProcessing: 'üîç Analisando imagem... Por favor, aguarde.',
  ocrSuccess: (count: number) => `‚úÖ Encontrei ${count} despesa(s) na imagem:`,
  ocrNoData: '‚ùå N√£o consegui extrair dados da imagem. Por favor, adicione a despesa manualmente.',
  ocrError: '‚ùå Erro ao processar imagem. Tente novamente.',
  confirmOcrExpense: (amount: number, description: string) =>
    `Encontrei:\nüíµ R$ ${amount.toFixed(2)}\nüìù ${description}\n\nResponda "sim" para confirmar ou "n√£o" para cancelar.`,

  // Error messages
  unknownCommand: '‚ùì Desculpe, n√£o entendi. Digite "ajuda" para ver os comandos dispon√≠veis.',
  genericError: '‚ùå Ocorreu um erro. Por favor, tente novamente.',
  invalidDate: '‚ùå Data inv√°lida. Use formatos como "hoje", "ontem", "01/12/2024".',
  missingCategory: '‚ùå Por favor, especifique uma categoria v√°lida.',

  // Group messages
  groupMention: 'üëã Ol√°! Me mencione ou comece com "bot" para usar meus comandos em grupos.',

  // Duplicate Detection Messages
  duplicateBlocked: (reason: string) => `üö´ Transa√ß√£o bloqueada automaticamente!\n\n${reason}\n\nüí° Se n√£o for duplicata, tente novamente com mais detalhes.`,
  duplicateWarning: (reason: string, confidence: number) => `‚ö†Ô∏è Poss√≠vel duplicata detectada!\n\n${reason}\n\nConfian√ßa: ${confidence}%\n\nüí° Se n√£o for duplicata, confirme digitando "confirmar" ou "sim".`,
  duplicateConfirmed: '‚úÖ Transa√ß√£o confirmada e adicionada!',
  duplicateConfirmationNotFound: '‚ùå N√£o encontrei transa√ß√£o pendente. Tente adicionar a despesa novamente.',
  duplicateConfirmationInvalid: '‚ùå Confirma√ß√£o n√£o reconhecida. Use "sim", "confirmar" ou "ok" para prosseguir.',

  // Transaction Correction Messages
  correctionTransactionNotFound: (id: string) => `‚ùå Transa√ß√£o ${id} n√£o encontrada. Verifique o ID e tente novamente.`,
  correctionTransactionDeleted: (id: string) => `‚úÖ Transa√ß√£o ${id} removida com sucesso!`,
  correctionTransactionUpdated: (id: string) => `‚úÖ Transa√ß√£o ${id} atualizada com sucesso!`,
  correctionNoChanges: '‚ùå Nenhuma altera√ß√£o especificada. Use "era R$ X" ou "era categoria Y" para especificar as mudan√ßas.',
  correctionInvalidAction: '‚ùå Tipo de corre√ß√£o n√£o reconhecido. Use "remover", "arrumar" ou "corrigir" seguido do ID da transa√ß√£o.',
  correctionMissingId: '‚ùå ID da transa√ß√£o n√£o encontrado. Use o ID de 6 caracteres que aparece quando voc√™ adiciona uma transa√ß√£o.',

  // Confirmation messages
  confirmYes: ['sim', 's', 'yes', 'y', 'confirmar', 'ok'],
  confirmNo: ['n√£o', 'nao', 'n', 'no', 'cancelar'],
  
  // Date keywords
  dateKeywords: {
    today: ['hoje', 'hj'],
    yesterday: ['ontem'],
    thisMonth: ['este m√™s', 'esse m√™s', 'm√™s atual'],
    lastMonth: ['m√™s passado', '√∫ltimo m√™s']
  }
}

export const formatCurrency = (value: number): string => {
  return `R$ ${value.toFixed(2).replace('.', ',')}`
}

export const formatDate = (date: Date): string => {
  return date.toLocaleDateString('pt-BR', {
    day: '2-digit',
    month: '2-digit',
    year: 'numeric'
  })
}

export const getMonthName = (month: number): string => {
  const months = [
    'Janeiro', 'Fevereiro', 'Mar√ßo', 'Abril', 'Maio', 'Junho',
    'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'
  ]
  return months[month - 1] || ''
}

